@using ReversiMvcV2.Controllers
@model ReversiMvcV2.Models.Spel

@{
    ViewData["Title"] = "Play";

    string playerToken;
    using(GetClaimsPrincipal getter = new GetClaimsPrincipal())
    {
        playerToken = getter.GetUserId(this.User);
    };
}


<div>
    <hr />
</div>

<div style="display: flex;align-items: center;">
    <canvas id="fiches" style="width: 30%;max-width:300px"></canvas>
<div class="PlayBoard">
    @for (var i = 0; i < 8; i++)
    {   
        @for (var ii = 0; ii < 8; ii++)
        {
            string id = i.ToString() + "_" + ii.ToString();
            <div class="Tile" id=@id></div>
        }
        
    }
    <button id="pass" class="disabled">Pass</button>
</div>
    <canvas id="fiches2" style="width: 30%;max-width:300px"></canvas>

    @{
        string winUrl = Url.Action("Win", "Spel");
        string drawUrl = Url.Action("Draw", "Spel");
        string loseUrl = Url.Action("Lose", "Spel");

    }

    @section Scripts{
 

        <script>
            Chart.defaults.plugins.legend.display = false;
            let fichesChart1 = undefined;
            let fichesChart2 = undefined;
            let index = 1;

            const updateStatistics = function(stats){
                console.log(stats);

                if (!stats.gameStateThroughHistory) {
                    return;
                }
                const lastGameState = stats.gameStateThroughHistory[stats.gameStateThroughHistory.length - 1];

                console.log(lastGameState);

                if(fichesChart1 === undefined){
                    fichesChart1 = new Chart("fiches", {
                        type: "bar",
                        data: {
                            labels: ["Witte fiches", "Zwarte fiches", "Open plekken"],
                            datasets: [{
                                backgroundColor: ["white", "black", "green"],
                                data: [lastGameState.wit, lastGameState.zwart, lastGameState.onveroverd]
                            }]
                        },
                        options: {
                            plugins: {
                                title: {
                                    display: true,
                                    text: "Aantal fiches op bord"
                                },
                                legend: {
                                    display: false
                                }
                            }
                        }
                    })
                } else {
                    fichesChart1.data.datasets[0].data[0] = lastGameState.wit;
                    fichesChart1.data.datasets[0].data[1] = lastGameState.zwart;
                    fichesChart1.data.datasets[0].data[2] = lastGameState.onveroverd;
                    fichesChart1.update();
                }

                const lastGameVeroverd = stats.veroverdeFichesThroughHistory[stats.veroverdeFichesThroughHistory.length - 1];

                console.log(lastGameVeroverd);
               

                if (fichesChart2 === undefined) {

                    let zwartArray = [];
                    let witArray = [];
                    let labels = [1,2,3,4,5,6,7,8,9,10];
                    stats.veroverdeFichesThroughHistory.forEach((x) => {
                        if(x.zwart == null || x.wit == null){

                        } else {
                            if(index > 10){
                                labels.push(index);
                            }
                            
                            zwartArray.push(x.zwart);
                            witArray.push(x.wit);
                            index++;
                        }
                    })

                    console.log("zwartArray");
                    console.log(zwartArray);
                    console.log("witArray");
                    console.log(witArray);
                    console.log("labels");
                    console.log(labels);

                    fichesChart2 = new Chart("fiches2", {
                        type: "line",
                        data: {
                            labels: labels,
                            datasets: [{
                                data: zwartArray,
                                borderColor: "black",
                                fill: false
                            }, {
                                data: witArray,
                                borderColor: "gray",
                                fill: false
                            }],

                        }
                    })

                    console.log(fichesChart2);
                } else {
                    if(index > 10){
                        fichesChart2.labels.push(index);
                    }

                    let currentDataset = 0;

                    fichesChart2.data.datasets.forEach((x) => {
                        if(currentDataset == 0){
                            x.data.push(lastGameVeroverd.zwart);
                        }

                        if(currentDataset == 1){
                            x.data.push(lastGameVeroverd.wit);
                        }

                        currentDataset++;
                        
                    })
                    index++;
                    fichesChart2.update();
                }
                
            }


            const gameToken = `@Model.ID`;
            console.log(gameToken);
            const playerToken = `@playerToken`;
            let win = function(){ fetch(`@winUrl`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
                }
            }
            )}

            let draw = function(){ fetch(`@drawUrl`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
                }
            }
            )}

            let lose = function(){ fetch(`@loseUrl`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
                }
            }
            )}
            
            //lose = function (){}
            //})
                
        </script>

        
        <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
        <script src="~/js/SignalR.js"></script>
        <script src="~/js/app.js"></script>
        <script>
            Game.init(updateStatistics);
        </script>
    }
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>